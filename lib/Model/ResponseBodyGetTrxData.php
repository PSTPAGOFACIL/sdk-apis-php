<?php
/**
 * ResponseBodyGetTrxData
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API Pago Facil
 *
 * API de Pago FÃ¡cil
 *
 * OpenAPI spec version: 2.1.5
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.18
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ResponseBodyGetTrxData Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ResponseBodyGetTrxData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'responseBodyGetTrx_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id_trx' => '\Swagger\Client\Model\IdTrx',
'id_service' => '\Swagger\Client\Model\IdService',
'order_id_tienda' => '\Swagger\Client\Model\IdTienda',
'amount' => '\Swagger\Client\Model\Amount',
'cost' => '\Swagger\Client\Model\Cost',
'email' => '\Swagger\Client\Model\Email',
'auth_code' => '\Swagger\Client\Model\AuthCode',
'created_at' => '\Swagger\Client\Model\CreatedAt',
'updated_at' => '\Swagger\Client\Model\UpdatedAt',
'callback_url' => '\Swagger\Client\Model\CallbackURL',
'complete_url' => '\Swagger\Client\Model\CompleteURL',
'cancel_url' => '\Swagger\Client\Model\CancelURL',
'ip' => '\Swagger\Client\Model\Ip',
'browser_data' => '\Swagger\Client\Model\BrowserData',
'source' => '\Swagger\Client\Model\Source',
'timestamp' => '\Swagger\Client\Model\Timestamp',
'payment_type_code' => '\Swagger\Client\Model\PaymentTypeCode',
'shares_number' => '\Swagger\Client\Model\SharesNumber',
'responce_code' => '\Swagger\Client\Model\ResponceCode',
'vci' => '\Swagger\Client\Model\Vci',
'abonos' => '\Swagger\Client\Model\Abonos',
'status' => '\Swagger\Client\Model\Status'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id_trx' => null,
'id_service' => null,
'order_id_tienda' => null,
'amount' => null,
'cost' => null,
'email' => null,
'auth_code' => null,
'created_at' => null,
'updated_at' => null,
'callback_url' => null,
'complete_url' => null,
'cancel_url' => null,
'ip' => null,
'browser_data' => null,
'source' => null,
'timestamp' => null,
'payment_type_code' => null,
'shares_number' => null,
'responce_code' => null,
'vci' => null,
'abonos' => null,
'status' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_trx' => 'idTrx',
'id_service' => 'idService',
'order_id_tienda' => 'orderIdTienda',
'amount' => 'amount',
'cost' => 'cost',
'email' => 'email',
'auth_code' => 'authCode',
'created_at' => 'createdAt',
'updated_at' => 'updatedAt',
'callback_url' => 'callbackURL',
'complete_url' => 'completeURL',
'cancel_url' => 'cancelURL',
'ip' => 'ip',
'browser_data' => 'browserData',
'source' => 'source',
'timestamp' => 'timestamp',
'payment_type_code' => 'paymentTypeCode',
'shares_number' => 'sharesNumber',
'responce_code' => 'responceCode',
'vci' => 'vci',
'abonos' => 'abonos',
'status' => 'status'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_trx' => 'setIdTrx',
'id_service' => 'setIdService',
'order_id_tienda' => 'setOrderIdTienda',
'amount' => 'setAmount',
'cost' => 'setCost',
'email' => 'setEmail',
'auth_code' => 'setAuthCode',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'callback_url' => 'setCallbackUrl',
'complete_url' => 'setCompleteUrl',
'cancel_url' => 'setCancelUrl',
'ip' => 'setIp',
'browser_data' => 'setBrowserData',
'source' => 'setSource',
'timestamp' => 'setTimestamp',
'payment_type_code' => 'setPaymentTypeCode',
'shares_number' => 'setSharesNumber',
'responce_code' => 'setResponceCode',
'vci' => 'setVci',
'abonos' => 'setAbonos',
'status' => 'setStatus'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_trx' => 'getIdTrx',
'id_service' => 'getIdService',
'order_id_tienda' => 'getOrderIdTienda',
'amount' => 'getAmount',
'cost' => 'getCost',
'email' => 'getEmail',
'auth_code' => 'getAuthCode',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'callback_url' => 'getCallbackUrl',
'complete_url' => 'getCompleteUrl',
'cancel_url' => 'getCancelUrl',
'ip' => 'getIp',
'browser_data' => 'getBrowserData',
'source' => 'getSource',
'timestamp' => 'getTimestamp',
'payment_type_code' => 'getPaymentTypeCode',
'shares_number' => 'getSharesNumber',
'responce_code' => 'getResponceCode',
'vci' => 'getVci',
'abonos' => 'getAbonos',
'status' => 'getStatus'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_trx'] = isset($data['id_trx']) ? $data['id_trx'] : null;
        $this->container['id_service'] = isset($data['id_service']) ? $data['id_service'] : null;
        $this->container['order_id_tienda'] = isset($data['order_id_tienda']) ? $data['order_id_tienda'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['auth_code'] = isset($data['auth_code']) ? $data['auth_code'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['callback_url'] = isset($data['callback_url']) ? $data['callback_url'] : null;
        $this->container['complete_url'] = isset($data['complete_url']) ? $data['complete_url'] : null;
        $this->container['cancel_url'] = isset($data['cancel_url']) ? $data['cancel_url'] : null;
        $this->container['ip'] = isset($data['ip']) ? $data['ip'] : null;
        $this->container['browser_data'] = isset($data['browser_data']) ? $data['browser_data'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['timestamp'] = isset($data['timestamp']) ? $data['timestamp'] : null;
        $this->container['payment_type_code'] = isset($data['payment_type_code']) ? $data['payment_type_code'] : null;
        $this->container['shares_number'] = isset($data['shares_number']) ? $data['shares_number'] : null;
        $this->container['responce_code'] = isset($data['responce_code']) ? $data['responce_code'] : null;
        $this->container['vci'] = isset($data['vci']) ? $data['vci'] : null;
        $this->container['abonos'] = isset($data['abonos']) ? $data['abonos'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_trx
     *
     * @return \Swagger\Client\Model\IdTrx
     */
    public function getIdTrx()
    {
        return $this->container['id_trx'];
    }

    /**
     * Sets id_trx
     *
     * @param \Swagger\Client\Model\IdTrx $id_trx id_trx
     *
     * @return $this
     */
    public function setIdTrx($id_trx)
    {
        $this->container['id_trx'] = $id_trx;

        return $this;
    }

    /**
     * Gets id_service
     *
     * @return \Swagger\Client\Model\IdService
     */
    public function getIdService()
    {
        return $this->container['id_service'];
    }

    /**
     * Sets id_service
     *
     * @param \Swagger\Client\Model\IdService $id_service id_service
     *
     * @return $this
     */
    public function setIdService($id_service)
    {
        $this->container['id_service'] = $id_service;

        return $this;
    }

    /**
     * Gets order_id_tienda
     *
     * @return \Swagger\Client\Model\IdTienda
     */
    public function getOrderIdTienda()
    {
        return $this->container['order_id_tienda'];
    }

    /**
     * Sets order_id_tienda
     *
     * @param \Swagger\Client\Model\IdTienda $order_id_tienda order_id_tienda
     *
     * @return $this
     */
    public function setOrderIdTienda($order_id_tienda)
    {
        $this->container['order_id_tienda'] = $order_id_tienda;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return \Swagger\Client\Model\Amount
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param \Swagger\Client\Model\Amount $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return \Swagger\Client\Model\Cost
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param \Swagger\Client\Model\Cost $cost cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets email
     *
     * @return \Swagger\Client\Model\Email
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param \Swagger\Client\Model\Email $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets auth_code
     *
     * @return \Swagger\Client\Model\AuthCode
     */
    public function getAuthCode()
    {
        return $this->container['auth_code'];
    }

    /**
     * Sets auth_code
     *
     * @param \Swagger\Client\Model\AuthCode $auth_code auth_code
     *
     * @return $this
     */
    public function setAuthCode($auth_code)
    {
        $this->container['auth_code'] = $auth_code;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \Swagger\Client\Model\CreatedAt
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \Swagger\Client\Model\CreatedAt $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \Swagger\Client\Model\UpdatedAt
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \Swagger\Client\Model\UpdatedAt $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets callback_url
     *
     * @return \Swagger\Client\Model\CallbackURL
     */
    public function getCallbackUrl()
    {
        return $this->container['callback_url'];
    }

    /**
     * Sets callback_url
     *
     * @param \Swagger\Client\Model\CallbackURL $callback_url callback_url
     *
     * @return $this
     */
    public function setCallbackUrl($callback_url)
    {
        $this->container['callback_url'] = $callback_url;

        return $this;
    }

    /**
     * Gets complete_url
     *
     * @return \Swagger\Client\Model\CompleteURL
     */
    public function getCompleteUrl()
    {
        return $this->container['complete_url'];
    }

    /**
     * Sets complete_url
     *
     * @param \Swagger\Client\Model\CompleteURL $complete_url complete_url
     *
     * @return $this
     */
    public function setCompleteUrl($complete_url)
    {
        $this->container['complete_url'] = $complete_url;

        return $this;
    }

    /**
     * Gets cancel_url
     *
     * @return \Swagger\Client\Model\CancelURL
     */
    public function getCancelUrl()
    {
        return $this->container['cancel_url'];
    }

    /**
     * Sets cancel_url
     *
     * @param \Swagger\Client\Model\CancelURL $cancel_url cancel_url
     *
     * @return $this
     */
    public function setCancelUrl($cancel_url)
    {
        $this->container['cancel_url'] = $cancel_url;

        return $this;
    }

    /**
     * Gets ip
     *
     * @return \Swagger\Client\Model\Ip
     */
    public function getIp()
    {
        return $this->container['ip'];
    }

    /**
     * Sets ip
     *
     * @param \Swagger\Client\Model\Ip $ip ip
     *
     * @return $this
     */
    public function setIp($ip)
    {
        $this->container['ip'] = $ip;

        return $this;
    }

    /**
     * Gets browser_data
     *
     * @return \Swagger\Client\Model\BrowserData
     */
    public function getBrowserData()
    {
        return $this->container['browser_data'];
    }

    /**
     * Sets browser_data
     *
     * @param \Swagger\Client\Model\BrowserData $browser_data browser_data
     *
     * @return $this
     */
    public function setBrowserData($browser_data)
    {
        $this->container['browser_data'] = $browser_data;

        return $this;
    }

    /**
     * Gets source
     *
     * @return \Swagger\Client\Model\Source
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param \Swagger\Client\Model\Source $source source
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets timestamp
     *
     * @return \Swagger\Client\Model\Timestamp
     */
    public function getTimestamp()
    {
        return $this->container['timestamp'];
    }

    /**
     * Sets timestamp
     *
     * @param \Swagger\Client\Model\Timestamp $timestamp timestamp
     *
     * @return $this
     */
    public function setTimestamp($timestamp)
    {
        $this->container['timestamp'] = $timestamp;

        return $this;
    }

    /**
     * Gets payment_type_code
     *
     * @return \Swagger\Client\Model\PaymentTypeCode
     */
    public function getPaymentTypeCode()
    {
        return $this->container['payment_type_code'];
    }

    /**
     * Sets payment_type_code
     *
     * @param \Swagger\Client\Model\PaymentTypeCode $payment_type_code payment_type_code
     *
     * @return $this
     */
    public function setPaymentTypeCode($payment_type_code)
    {
        $this->container['payment_type_code'] = $payment_type_code;

        return $this;
    }

    /**
     * Gets shares_number
     *
     * @return \Swagger\Client\Model\SharesNumber
     */
    public function getSharesNumber()
    {
        return $this->container['shares_number'];
    }

    /**
     * Sets shares_number
     *
     * @param \Swagger\Client\Model\SharesNumber $shares_number shares_number
     *
     * @return $this
     */
    public function setSharesNumber($shares_number)
    {
        $this->container['shares_number'] = $shares_number;

        return $this;
    }

    /**
     * Gets responce_code
     *
     * @return \Swagger\Client\Model\ResponceCode
     */
    public function getResponceCode()
    {
        return $this->container['responce_code'];
    }

    /**
     * Sets responce_code
     *
     * @param \Swagger\Client\Model\ResponceCode $responce_code responce_code
     *
     * @return $this
     */
    public function setResponceCode($responce_code)
    {
        $this->container['responce_code'] = $responce_code;

        return $this;
    }

    /**
     * Gets vci
     *
     * @return \Swagger\Client\Model\Vci
     */
    public function getVci()
    {
        return $this->container['vci'];
    }

    /**
     * Sets vci
     *
     * @param \Swagger\Client\Model\Vci $vci vci
     *
     * @return $this
     */
    public function setVci($vci)
    {
        $this->container['vci'] = $vci;

        return $this;
    }

    /**
     * Gets abonos
     *
     * @return \Swagger\Client\Model\Abonos
     */
    public function getAbonos()
    {
        return $this->container['abonos'];
    }

    /**
     * Sets abonos
     *
     * @param \Swagger\Client\Model\Abonos $abonos abonos
     *
     * @return $this
     */
    public function setAbonos($abonos)
    {
        $this->container['abonos'] = $abonos;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Swagger\Client\Model\Status
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Swagger\Client\Model\Status $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
